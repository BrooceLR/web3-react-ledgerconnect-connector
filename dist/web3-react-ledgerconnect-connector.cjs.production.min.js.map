{"version":3,"file":"web3-react-ledgerconnect-connector.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["import { AbstractConnectorArguments, ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport warning from 'tiny-warning'\n\nimport { SendReturnResult, SendReturn, Send, SendOld } from './types'\n\nfunction parseSendReturn(sendReturn: SendReturnResult | SendReturn): any {\n  return sendReturn.hasOwnProperty('result') ? sendReturn.result : sendReturn\n}\n\nexport class NoEthereumProviderError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'No Ethereum provider was found on window.ethereum.'\n  }\n}\n\nexport class NotLedgerConnectProviderError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The provider found on window.ethereum is not Ledger Connect.'\n  }\n}\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\nexport class LedgerConnectConnector extends AbstractConnector {\n  constructor(kwargs: AbstractConnectorArguments) {\n    super(kwargs)\n\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this)\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n  }\n\n  private handleChainChanged(chainId: string | number): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId, provider: window.ethereum })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    if (accounts.length === 0) {\n      this.emitDeactivate()\n    } else {\n      this.emitUpdate({ account: accounts[0] })\n    }\n  }\n\n  private handleClose(code: number, reason: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'close' event with payload\", code, reason)\n    }\n    this.emitDeactivate()\n  }\n\n  private handleNetworkChanged(networkId: string | number): void {\n    if (__DEV__) {\n      console.log(\"Handling 'networkChanged' event with payload\", networkId)\n    }\n    this.emitUpdate({ chainId: networkId, provider: window.ethereum })\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!window.ethereum) {\n      throw new NoEthereumProviderError()\n    }\n\n    if (!window.ethereum?.isLedgerConnect) {\n      console.log('Ledger Connect extension not found')\n      throw new NotLedgerConnectProviderError()\n    }\n    console.log('Ledger Connect extension is installed and enabled')\n\n    if (window.ethereum.on) {\n      window.ethereum.on('chainChanged', this.handleChainChanged)\n      window.ethereum.on('accountsChanged', this.handleAccountsChanged)\n      window.ethereum.on('close', this.handleClose)\n      window.ethereum.on('networkChanged', this.handleNetworkChanged)\n    }\n\n    // TODO\n    if ((window.ethereum as any).isMetaMask) {\n      ;(window.ethereum as any).autoRefreshOnNetworkChange = false\n    }\n\n    // try to activate + get account via eth_requestAccounts\n    let account\n    try {\n      account = await (window.ethereum.send as Send)('eth_requestAccounts').then(\n        sendReturn => parseSendReturn(sendReturn)[0]\n      )\n    } catch (error) {\n      if ((error as any).code === 4001) {\n        throw new UserRejectedRequestError()\n      }\n      warning(false, 'eth_requestAccounts was unsuccessful, falling back to enable')\n    }\n\n    // if unsuccessful, try enable\n    if (!account) {\n      // if enable is successful but doesn't return accounts, fall back to getAccount (not happy i have to do this...)\n      account = await window.ethereum.enable().then(sendReturn => sendReturn && parseSendReturn(sendReturn)[0])\n    }\n\n    return { provider: window.ethereum, ...(account ? { account } : {}) }\n  }\n\n  public async getProvider(): Promise<any> {\n    return window.ethereum\n  }\n\n  public async getChainId(): Promise<number | string> {\n    if (!window.ethereum) {\n      throw new NoEthereumProviderError()\n    }\n\n    let chainId\n    try {\n      chainId = await (window.ethereum.send as Send)('eth_chainId').then(parseSendReturn)\n    } catch {\n      warning(false, 'eth_chainId was unsuccessful, falling back to net_version')\n    }\n\n    if (!chainId) {\n      try {\n        chainId = await (window.ethereum.send as Send)('net_version').then(parseSendReturn)\n      } catch {\n        warning(false, 'net_version was unsuccessful, falling back to net version v2')\n      }\n    }\n\n    if (!chainId) {\n      try {\n        chainId = parseSendReturn((window.ethereum.send as SendOld)({ method: 'net_version' }))\n      } catch {\n        warning(false, 'net_version v2 was unsuccessful, falling back to manual matches and static properties')\n      }\n    }\n\n    if (!chainId) {\n      if ((window.ethereum as any).isDapper) {\n        chainId = parseSendReturn((window.ethereum as any).cachedResults.net_version)\n      } else {\n        chainId =\n          (window.ethereum as any).chainId ||\n          (window.ethereum as any).netVersion ||\n          (window.ethereum as any).networkVersion ||\n          (window.ethereum as any)._chainId\n      }\n    }\n\n    return chainId\n  }\n\n  public async getAccount(): Promise<null | string> {\n    if (!window.ethereum) {\n      throw new NoEthereumProviderError()\n    }\n\n    let account\n    try {\n      account = await (window.ethereum.send as Send)('eth_accounts').then(sendReturn => parseSendReturn(sendReturn)[0])\n    } catch {\n      warning(false, 'eth_accounts was unsuccessful, falling back to enable')\n    }\n\n    if (!account) {\n      try {\n        account = await window.ethereum.enable().then(sendReturn => parseSendReturn(sendReturn)[0])\n      } catch {\n        warning(false, 'enable was unsuccessful, falling back to eth_accounts v2')\n      }\n    }\n\n    if (!account) {\n      account = parseSendReturn((window.ethereum.send as SendOld)({ method: 'eth_accounts' }))[0]\n    }\n\n    return account\n  }\n\n  public deactivate() {\n    if (window.ethereum && window.ethereum.removeListener) {\n      window.ethereum.removeListener('chainChanged', this.handleChainChanged)\n      window.ethereum.removeListener('accountsChanged', this.handleAccountsChanged)\n      window.ethereum.removeListener('close', this.handleClose)\n      window.ethereum.removeListener('networkChanged', this.handleNetworkChanged)\n    }\n  }\n\n  public async isAuthorized(): Promise<boolean> {\n    if (!window.ethereum) {\n      return false\n    }\n\n    try {\n      return await (window.ethereum.send as Send)('eth_accounts').then(sendReturn => {\n        if (parseSendReturn(sendReturn).length > 0) {\n          return true\n        } else {\n          return false\n        }\n      })\n    } catch {\n      return false\n    }\n  }\n}\n"],"names":["parseSendReturn","sendReturn","hasOwnProperty","result","NoEthereumProviderError","_this","name","constructor","message","_inheritsLoose","Error","NotLedgerConnectProviderError","_this2","UserRejectedRequestError","_this3","kwargs","_this4","handleNetworkChanged","bind","handleChainChanged","handleAccountsChanged","handleClose","_proto","chainId","this","emitUpdate","provider","window","ethereum","accounts","length","emitDeactivate","account","code","reason","networkId","activate","_context","_window$ethereum","isLedgerConnect","console","log","on","isMetaMask","autoRefreshOnNetworkChange","send","then","enable","getProvider","getChainId","_context3","method","isDapper","cachedResults","net_version","netVersion","networkVersion","_chainId","getAccount","_context4","deactivate","removeListener","isAuthorized","_context5","AbstractConnector"],"mappings":"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"}