{"version":3,"file":"web3-react-ledgerconnect-connector.cjs.development.js","sources":["../src/index.ts"],"sourcesContent":["import { AbstractConnectorArguments, ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport warning from 'tiny-warning'\n\nimport { SendReturnResult, SendReturn, Send, SendOld } from './types'\n\nfunction parseSendReturn(sendReturn: SendReturnResult | SendReturn): any {\n  return sendReturn.hasOwnProperty('result') ? sendReturn.result : sendReturn\n}\n\nexport class NoEthereumProviderError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'No Ethereum provider was found on window.ethereum.'\n  }\n}\n\nexport class NotLedgerConnectProviderError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The provider found on window.ethereum is not Ledger Connect.'\n  }\n}\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\nexport class LedgerConnectConnector extends AbstractConnector {\n  constructor(kwargs: AbstractConnectorArguments) {\n    super(kwargs)\n\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this)\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n  }\n\n  private handleChainChanged(chainId: string | number): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId, provider: window.ethereum })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    if (accounts.length === 0) {\n      this.emitDeactivate()\n    } else {\n      this.emitUpdate({ account: accounts[0] })\n    }\n  }\n\n  private handleClose(code: number, reason: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'close' event with payload\", code, reason)\n    }\n    this.emitDeactivate()\n  }\n\n  private handleNetworkChanged(networkId: string | number): void {\n    if (__DEV__) {\n      console.log(\"Handling 'networkChanged' event with payload\", networkId)\n    }\n    this.emitUpdate({ chainId: networkId, provider: window.ethereum })\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!window.ethereum) {\n      throw new NoEthereumProviderError()\n    }\n\n    if (!window.ethereum?.isLedgerConnect) {\n      console.log('Ledger Connect extension not found')\n      throw new NotLedgerConnectProviderError()\n    }\n    console.log('Ledger Connect extension is installed and enabled')\n\n    if (window.ethereum.on) {\n      window.ethereum.on('chainChanged', this.handleChainChanged)\n      window.ethereum.on('accountsChanged', this.handleAccountsChanged)\n      window.ethereum.on('close', this.handleClose)\n      window.ethereum.on('networkChanged', this.handleNetworkChanged)\n    }\n\n    // TODO\n    if ((window.ethereum as any).isMetaMask) {\n      ;(window.ethereum as any).autoRefreshOnNetworkChange = false\n    }\n\n    // try to activate + get account via eth_requestAccounts\n    let account\n    try {\n      account = await (window.ethereum.send as Send)('eth_requestAccounts').then(\n        sendReturn => parseSendReturn(sendReturn)[0]\n      )\n    } catch (error) {\n      if ((error as any).code === 4001) {\n        throw new UserRejectedRequestError()\n      }\n      warning(false, 'eth_requestAccounts was unsuccessful, falling back to enable')\n    }\n\n    // if unsuccessful, try enable\n    if (!account) {\n      // if enable is successful but doesn't return accounts, fall back to getAccount (not happy i have to do this...)\n      account = await window.ethereum.enable().then(sendReturn => sendReturn && parseSendReturn(sendReturn)[0])\n    }\n\n    return { provider: window.ethereum, ...(account ? { account } : {}) }\n  }\n\n  public async getProvider(): Promise<any> {\n    return window.ethereum\n  }\n\n  public async getChainId(): Promise<number | string> {\n    if (!window.ethereum) {\n      throw new NoEthereumProviderError()\n    }\n\n    let chainId\n    try {\n      chainId = await (window.ethereum.send as Send)('eth_chainId').then(parseSendReturn)\n    } catch {\n      warning(false, 'eth_chainId was unsuccessful, falling back to net_version')\n    }\n\n    if (!chainId) {\n      try {\n        chainId = await (window.ethereum.send as Send)('net_version').then(parseSendReturn)\n      } catch {\n        warning(false, 'net_version was unsuccessful, falling back to net version v2')\n      }\n    }\n\n    if (!chainId) {\n      try {\n        chainId = parseSendReturn((window.ethereum.send as SendOld)({ method: 'net_version' }))\n      } catch {\n        warning(false, 'net_version v2 was unsuccessful, falling back to manual matches and static properties')\n      }\n    }\n\n    if (!chainId) {\n      if ((window.ethereum as any).isDapper) {\n        chainId = parseSendReturn((window.ethereum as any).cachedResults.net_version)\n      } else {\n        chainId =\n          (window.ethereum as any).chainId ||\n          (window.ethereum as any).netVersion ||\n          (window.ethereum as any).networkVersion ||\n          (window.ethereum as any)._chainId\n      }\n    }\n\n    return chainId\n  }\n\n  public async getAccount(): Promise<null | string> {\n    if (!window.ethereum) {\n      throw new NoEthereumProviderError()\n    }\n\n    let account\n    try {\n      account = await (window.ethereum.send as Send)('eth_accounts').then(sendReturn => parseSendReturn(sendReturn)[0])\n    } catch {\n      warning(false, 'eth_accounts was unsuccessful, falling back to enable')\n    }\n\n    if (!account) {\n      try {\n        account = await window.ethereum.enable().then(sendReturn => parseSendReturn(sendReturn)[0])\n      } catch {\n        warning(false, 'enable was unsuccessful, falling back to eth_accounts v2')\n      }\n    }\n\n    if (!account) {\n      account = parseSendReturn((window.ethereum.send as SendOld)({ method: 'eth_accounts' }))[0]\n    }\n\n    return account\n  }\n\n  public deactivate() {\n    if (window.ethereum && window.ethereum.removeListener) {\n      window.ethereum.removeListener('chainChanged', this.handleChainChanged)\n      window.ethereum.removeListener('accountsChanged', this.handleAccountsChanged)\n      window.ethereum.removeListener('close', this.handleClose)\n      window.ethereum.removeListener('networkChanged', this.handleNetworkChanged)\n    }\n  }\n\n  public async isAuthorized(): Promise<boolean> {\n    if (!window.ethereum) {\n      return false\n    }\n\n    try {\n      return await (window.ethereum.send as Send)('eth_accounts').then(sendReturn => {\n        if (parseSendReturn(sendReturn).length > 0) {\n          return true\n        } else {\n          return false\n        }\n      })\n    } catch {\n      return false\n    }\n  }\n}\n"],"names":["parseSendReturn","sendReturn","hasOwnProperty","result","NoEthereumProviderError","name","constructor","message","Error","NotLedgerConnectProviderError","UserRejectedRequestError","LedgerConnectConnector","kwargs","handleNetworkChanged","bind","handleChainChanged","handleAccountsChanged","handleClose","chainId","console","log","emitUpdate","provider","window","ethereum","accounts","length","emitDeactivate","account","code","reason","networkId","activate","isLedgerConnect","on","isMetaMask","autoRefreshOnNetworkChange","send","then","warning","enable","getProvider","getChainId","method","isDapper","cachedResults","net_version","netVersion","networkVersion","_chainId","getAccount","deactivate","removeListener","isAuthorized","AbstractConnector"],"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"}